@model ATeamFitness.Models.PersonalTrainer

@{
    ViewData["Title"] = "Details";
}

<h1>Details</h1>

<div>
    <h4>PersonalTrainer</h4>
    <hr />
    <dl class="row">

        <dt class="col-sm-2">
            @Html.DisplayNameFor(model => model.Name)
        </dt>
        <dd class="col-sm-10">
            @Html.DisplayFor(model => model.Name)
        </dd>
        <dt class="col-sm-2">
            @Html.DisplayNameFor(model => model.ZipCode)
        </dt>
        <dd class="col-sm-10">
            @Html.DisplayFor(model => model.ZipCode)
        </dd>
        <dt class="col-sm-2">
            @Html.DisplayNameFor(model => model.Specialization)
        </dt>
        <dd class="col-sm-10">
            @Html.DisplayFor(model => model.Specialization)
        </dd>
        <dt class="col-sm-2">
            @Html.DisplayNameFor(model => model.Schedule)
        </dt>
        <dd class="col-sm-10">
            @Html.DisplayFor(model => model.Schedule)
        </dd>
        <dt class="col-sm-2">
            @Html.DisplayNameFor(model => model.WorkoutCalendar)
        </dt>
        <dd class="col-sm-10">
            @Html.DisplayFor(model => model.WorkoutCalendar)
        </dd>
        <dt class="col-sm-2">
            @Html.DisplayNameFor(model => model.Bio)
        </dt>


        <dd class="col-sm-10">
            @Html.DisplayFor(model => model.Bio)
        </dd>
        <dt class="col-sm-2">
            @Html.DisplayNameFor(model => model.TrainerLocation)
        </dt>
        <dd class="col-sm-10">
            @Html.DisplayFor(model => model.TrainerLocation)
        </dd>
        <dt class="col-sm-2">
            @Html.DisplayNameFor(model => model.Rating)
        </dt>
        <dd class="col-sm-10">
            @Html.DisplayFor(model => model.Rating)

    </dl>
</div>
head>
<style>
    /* Set the size of the div element that contains the map */
    #map {
        height: 270px; /* The height is 400 pixels */
        width: 720px; /* The width is the width of the web page */
        position: absolute;
        right: 20px;
        bottom: 400px;
    }
</style>

<body>
    <!--The div element for the map -->
    <div id="map"></div>
    <script>
        // Initialize and add the map
        function initMap() {
            // The location of Uluru
            var uluru = { lat: -25.344, lng: 131.036 };
            // The map, centered at Uluru
            var map = new google.maps.Map(
                document.getElementById('map'), { zoom: 4, center: uluru });
            // The marker, positioned at Uluru
            var marker = new google.maps.Marker({ position: uluru, map: map });
        }
    </script>
    <!--Load the API from the specified URL
    * The async attribute allows the browser to render the page while the API loads
    * The key parameter will contain your own API key (which is not needed for this tutorial)
    * The callback parameter executes the initMap() function
    -->
    <script async defer
            src="https://maps.googleapis.com/maps/api/js?key=AIzaSyDY2M6mX6aQTo1WAsicnNWH4CR_SQFspww&callback=initMap">
    </script>
</body>
</html>